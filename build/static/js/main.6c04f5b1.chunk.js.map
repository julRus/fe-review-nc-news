{"version":3,"sources":["api.js","components/subComponents/ArticleCard.jsx","components/subComponents/ArticleSorter.jsx","components/ArticleFeeder.jsx","components/Header.jsx","components/Homepage.jsx","components/subComponents/CommentCard.jsx","components/subComponents/VotesIncrementer.jsx","components/ErrorShower.jsx","components/subComponents/CommentMaker.jsx","components/Article.jsx","components/SignUp.jsx","components/LogIn.jsx","components/TopicFeeder.jsx","components/TopicArticles.jsx","App.js","serviceWorker.js","index.js"],"names":["baseURL","getArticles","sort_term","topicName","axios","get","params","topic","sort_by","then","data","articles","patchArticleVotes","id","amnt","endpoint","commentId","path","patch","inc_votes","catch","console","log","ArticleCard","props","to","className","toString","date","comments","title","ArticleSorter","handleCheck","target","fetchArticles","value","slug","type","name","onChange","event","ArticleFeeder","state","isLoading","err","api","setState","status","response","msg","this","map","article","key","article_id","created_at","comment_count","React","Component","Header","user","password","username","Homepage","CommentCard","author","body","votes","VotesIncrementer","hasVotedUp","txt","onClick","incrementVotes","role","aria-label","prop","displayVote","ErrorShower","CommentMaker","comment","hasCommented","onSubmit","createComment","rows","cols","placeholder","required","handleChange","preventDefault","post","addComment","Article","voteChangeArticle","voteChangeComment","handleVoteChange","currentState","newSate","comment_id","newState","sate","unshift","articleVotes","style","display","deletionChecker","commentVotes","fetchArticle","fetchComments","window","confirm","delete","deletedComment","alert","filter","SignUp","LogIn","TopicFeeder","topics","desc","description","TopicArticles","location","App","default","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6SAEMA,EAAU,0CAEHC,EAAc,SAACC,EAAWC,GAGrC,OAAOC,IACJC,IADI,UACGL,EADH,aACuB,CAC1BM,OAAQ,CAAEC,MAAOJ,EAAWK,QAASN,KAEtCO,MAAK,YACJ,OADkB,EAAXC,KACKC,aAgBLC,EAAoB,SAACC,EAAIC,EAAMC,EAAUC,GACpD,IAAMC,EAAOF,EAAQ,oBAAgBC,GAAhB,oBAA2CH,GAChE,OAAOT,IACJc,MADI,UACKlB,EADL,YACgBiB,GAAQ,CAAEE,UAAWL,IACzCL,MAAK,YACJ,OADkB,EAAXC,QAGRU,MAAMC,QAAQC,MCFJC,EA9BK,SAAAC,GAClB,OACE,oCACE,kBAAC,IAAD,CAAMC,GAAE,oBAAeD,EAAMX,IAAMa,UAAU,gBAC3C,yBAAKA,UAAU,yBAAyBb,GAAIW,EAAMX,GAAGc,YACnD,yBAAKD,UAAU,qBACb,wBAAIA,UAAU,gBAMZ,uBAAGA,UAAU,yBAAb,KAAwCF,EAAMI,MAC9C,uBAAGF,UAAU,0BAA0BF,EAAMjB,OAC7C,uBAAGmB,UAAU,4BACVF,EAAMK,SADT,aAGA,uBAAGH,UAAU,sBAAb,IAAoCF,EAAMM,aCoCzCC,EAtDO,SAAAP,GAOpB,IAAMQ,EAAc,SAACC,EAAQC,GAK3BA,EAAcD,EAAOE,MAAOX,EAAMY,OAGpC,OACE,0BAAMV,UAAU,YACd,uBAAGA,UAAU,kBAAb,QACA,2BAAOA,UAAU,kBAAjB,OAEE,2BACEA,UAAU,iBACVW,KAAK,QACLC,KAAK,QACLH,MAAM,aACNI,SAAU,SAAAC,GAAK,OAAIR,EAAYQ,EAAMP,OAAQT,EAAMU,mBAE9C,IACT,6BACA,2BAAOR,UAAU,kBAAjB,WAEE,2BACEA,UAAU,iBACVW,KAAK,QACLC,KAAK,QACLH,MAAM,gBACNI,SAAU,SAAAC,GAAK,OAAIR,EAAYQ,EAAMP,OAAQT,EAAMU,mBAGvD,6BACA,2BAAOR,UAAU,kBAAjB,QAEE,2BACEA,UAAU,iBACVW,KAAK,QACLC,KAAK,QACLH,MAAM,QACNI,SAAU,SAAAC,GAAK,OAAIR,EAAYQ,EAAMP,OAAQT,EAAMU,qBC3CxCO,E,2MACnBC,MAAQ,CACN/B,SAAU,GACVgC,WAAW,EACXC,IAAK,M,EA2DPV,cAAgB,SAAChC,EAAWK,GAC1BsC,EACe3C,EAAWK,GACvBE,MAAK,SAAAE,GACJ,EAAKmC,SAAS,CAAEnC,SAAUA,EAAUgC,WAAW,OAEhDvB,OAAM,SAAAwB,GACL,EAAKE,SAAS,CACZF,IAAK,CAAEG,OAAQH,EAAII,SAASD,OAAQE,IAAKL,EAAII,SAAStC,KAAKuC,KAC3DN,WAAW,Q,wEAlEV,IAKChC,EAAauC,KAAKR,MAAlB/B,SACR,OAAIuC,KAAKR,MAAMC,UACN,uBAAGjB,UAAU,iBAAb,cACc,OAAnBwB,KAAKR,MAAME,IAEX,oCACE,qDACA,mDAIJ,6BAASlB,UAAU,WACjB,yBAAKA,UAAU,kBACb,kBAAC,EAAD,CACEQ,cAAegB,KAAKhB,cACpBE,KAAMc,KAAK1B,MAAMY,QAGrB,yBAAKV,UAAU,YACb,wBACEA,UAAU,KAGV,wBAAIA,UAAU,kBAAd,YACCf,EAASwC,KAAI,SAAAC,GACZ,OACE,kBAAC,EAAD,CACEC,IAAKD,EAAQE,WACbzC,GAAIuC,EAAQE,WACZ1B,KAAMwB,EAAQG,WACdhD,MAAO6C,EAAQ7C,MACfuB,MAAOsB,EAAQtB,MACfD,SAAUuB,EAAQI,wB,0CAWhCN,KAAKhB,cAAc,KAAMgB,KAAK1B,MAAMY,U,GAtDGqB,IAAMC,WCyFlCC,EA5FA,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAChB,OAAIA,EAAKC,SAEL,oCASE,yBAAKnC,UAAU,OACb,wBAAIA,UAAU,eACZ,kBAAC,IAAD,CAAMD,GAAG,IAAIC,UAAU,gBAAgBb,GAAG,YACxC,uBACEa,UAAU,cAKV,uBAAGb,GAAG,QAAN,UAGJ,kBAAC,IAAD,CAAMY,GAAG,UAAUC,UAAU,kBAAkBb,GAAG,YAChD,uBAAGa,UAAU,aAAab,GAAG,QAC3B,uBAAGA,GAAG,UAAN,YAGJ,kBAAC,IAAD,CACEY,GAAG,oBACHC,UAAU,kBACVb,GAAG,YAEH,uBAAGa,UAAU,aAAab,GAAG,QAC3B,uBAAGA,GAAG,UAAN,YAGJ,kBAAC,IAAD,CAAMY,GAAG,OAAOC,UAAU,gBAAgBb,GAAG,YAC3C,uBAAGa,UAAU,cAAcb,GAAG,QAC5B,uBAAGA,GAAG,QAAN,UAGJ,kBAAC,IAAD,CAAMY,GAAG,UAAUC,UAAU,gBAAgBb,GAAG,YAC9C,uBAAGa,UAAU,iBAAiBb,GAAG,QAC/B,uBAAGA,GAAG,QAAQ+C,EAAKE,eAS/B,6BACE,6BACE,4BACE,kBAAC,IAAD,CAAMrC,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,UACA,kBAAC,IAAD,CAAMA,GAAG,qBAAT,oBACA,kBAAC,IAAD,CAAMA,GAAG,YAAT,WACA,kBAAC,IAAD,CAAMA,GAAG,WAAT,YAGJ,gCACE,oCACA,8CCnDOsC,EAbE,SAAC,GAAc,IAAZH,EAAW,EAAXA,KAClB,OACE,6BACE,gCACE,kBAAC,EAAD,CAAQA,KAAMA,KAEhB,0BAAMlC,UAAU,gBACd,kBAAC,EAAD,CAAekC,KAAMA,O,gBCMdI,EAhBK,SAAAxC,GAAU,IACpBI,EAA8BJ,EAA9BI,KAAMqC,EAAwBzC,EAAxByC,OAAQC,EAAgB1C,EAAhB0C,KAAMC,EAAU3C,EAAV2C,MAC5B,OACE,oCACE,wBAAIzC,UAAU,WACZ,yBAAKA,UAAU,kBACb,uBAAGA,UAAU,kBAAkBuC,GAC/B,uBAAGvC,UAAU,iBAAiByC,GAC9B,uBAAGzC,UAAU,gBAAgBE,IAE/B,uBAAGF,UAAU,gBAAgBwC,MCThBE,E,2MACnB1B,MAAQ,CACN2B,YAAY,EACZC,IAAK,qB,wEAEG,IAAD,OACP,OACE,oCACE,4BACEC,QAAS,kBAAM,EAAKC,eAAe,EAAKhD,QACxCE,UAAU,wBAEV,0BAAM+C,KAAK,MAAMC,aAAW,YACzBxB,KAAKR,MAAM4B,S,qCAOPK,GAAO,IAAD,OACnBtD,QAAQC,IAAIqD,EAAK3D,YACa,IAA1BkC,KAAKR,MAAM2B,WACK,iBAAdM,EAAKrC,MACPqC,EAAKC,YAAYD,EAAK3D,UAAW,EAAG,qBACpC6B,EAAsB8B,EAAK9D,GAAI,GAAGJ,MAAK,SAAA2C,GAErC,EAAKN,SAAS,CAAEuB,YAAY,EAAMC,IAAK,4BAElB,aAAdK,EAAKrC,OACdqC,EAAKC,YAAYD,EAAK3D,UAAW,EAAG,qBACpC6B,EACqB8B,EAAK9D,GAAI,EAAG8D,EAAKrC,KAAMqC,EAAK3D,WAC9CP,MAAK,SAAA2C,GAEJ,EAAKN,SAAS,CAAEuB,YAAY,EAAMC,IAAK,4BAI3B,iBAAdK,EAAKrC,MACPqC,EAAKC,YAAYD,EAAK3D,UAAW,EAAG,qBACpC6B,EAAsB8B,EAAK9D,IAAK,GAAGJ,MAAK,SAAA2C,GACtC,EAAKN,SAAS,CAAEuB,YAAY,EAAOC,IAAK,0BAEnB,aAAdK,EAAKrC,OACdqC,EAAKC,YAAYD,EAAK3D,WAAY,EAAG,qBACrC6B,EACqB8B,EAAK9D,IAAK,EAAG8D,EAAKrC,KAAMqC,EAAK3D,WAC/CP,MAAK,SAAA2C,GAEJ,EAAKN,SAAS,CAAEuB,YAAY,EAAOC,IAAK,8B,GAlDNb,IAAMC,WCcrCmB,EAbK,SAAAjC,GAClB,OACE,6BACE,gCACE,kBAAC,EAAD,CAAQgB,KAAMhB,EAAIA,IAAIgB,QAEvBvC,QAAQC,IAAIsB,GACb,4BAAKA,EAAIA,IAAIG,QACb,4BAAKH,EAAIA,IAAIK,OCRE6B,E,2MACnBpC,MAAQ,CACNqC,QAAS,CAAEjB,SAAU,EAAKtC,MAAMoC,KAAKE,SAAUI,KAAM,IACrDc,cAAc,G,wEAEN,IAAD,OACP,OACE,oCAIE,8BACE,0BAAMC,SAAU,SAAAzC,GAAK,OAAI,EAAK0C,cAAc1C,KAC1C,uBAAGd,UAAU,sBAAb,kBACA,6BACA,+BACE,8BACEyD,KAAK,KACLC,KAAK,KACLC,YAAY,kBACZC,UAAQ,EACR5D,UAAU,mBACVS,MAAOe,KAAKR,MAAMqC,QAAQb,KAC1B3B,SAAU,SAAAC,GAAK,OAAI,EAAK+C,aAAa/C,OAEhC,IACT,6BACA,4BAAQd,UAAU,uBAAlB,e,mCAOGc,GACX,IAAM0B,EAAO1B,EAAMP,OAAOE,MACpByB,EAAOV,KAAK1B,MAAMoC,KACxBV,KAAKJ,SAAS,CAAEiC,QAAS,CAAEjB,SAAUF,EAAKE,SAAUI,KAAMA,O,oCAG9C1B,GAAQ,ITNIuC,EAASlE,ESMd,OACnB2B,EAAMgD,iBACNtC,KAAKJ,SAAS,CACZiC,QAAS,CAAEjB,SAAU,KAAMI,KAAM,IACjCc,cAAc,KTVQD,ESYR7B,KAAKR,MAAMqC,QTZMlE,ESYGqC,KAAK1B,MAAM8B,WTV1ClD,IACJqF,KADI,UACIzF,EADJ,qBACwBa,EADxB,aACuC,CAC1CiD,SAAUiB,EAAQjB,SAClBI,KAAMa,EAAQb,OAEfzD,MAAK,YACJ,OADkB,EAAXC,QAGRU,MAAMC,QAAQC,MSE4Cb,MAAK,SAAAsE,GAC9D,EAAKvD,MAAMkE,WAAWX,EAAQA,gB,GA/CMtB,IAAMC,W,6jBCK3BiC,E,2MACnBjD,MAAQ,CACNU,QAAS,GACTvB,SAAU,GACVc,WAAW,EACXC,IAAK,KACLgD,kBAAmB,EACnBC,kBAAmB,EACnBb,cAAc,G,EAiIhBc,iBAAmB,SAACjF,EAAIC,EAAMqB,GACd,sBAAVA,EACF,EAAKW,UAAS,SAAAiD,GACZ,IAAMC,EAAO,KACRD,EADQ,CAEXlE,SAAS,YAAKkE,EAAalE,YAO7B,OALAmE,EAAQnE,SAASsB,KAAI,SAAA4B,GACflE,IAAOkE,EAAQkB,aACjBlB,EAAQZ,OAASrD,MAGdkF,KAGT,EAAKlD,SAAS,CAAE8C,kBAAmB9E,K,EA6BvC4E,WAAa,SAAAX,GACX,EAAKjC,UAAS,SAAAiD,GACZ,IAAMG,EAAQ,KAAQ,EAAKC,KAAb,CAAmBtE,SAAU,EAAKa,MAAMb,WAEtD,OADAqE,EAASrE,SAASuE,QAAQrB,GACnBmB,M,wEA9KD,IAAD,OACP,GAAIhD,KAAKR,MAAMC,UACb,OAAO,uBAAGjB,UAAU,iBAAb,cACT,GAAuB,OAAnBwB,KAAKR,MAAME,IAAc,OAAO,kBAAC,EAAD,CAAaA,IAAKM,KAAKR,MAAME,MAH1D,MAI4CM,KAAKR,MAAMU,QAAtDtB,EAJD,EAICA,MAAOyB,EAJR,EAIQA,WAAYU,EAJpB,EAIoBA,OAAQE,EAJ5B,EAI4BA,MAAOD,EAJnC,EAImCA,KAClCrC,EAAaqB,KAAKR,MAAlBb,SACR,OACE,oCACE,gCACG,IACD,kBAAC,EAAD,CAAQ+B,KAAMV,KAAK1B,MAAMoC,QAE3B,0BAAMlC,UAAU,WACd,6BACE,6BACE,wBAAIA,UAAU,iBAAiBI,GAC/B,kBAAC,EAAD,CACEuE,aAAcnD,KAAKR,MAAMU,QAAQe,MACjCtD,GAAIqC,KAAKR,MAAMU,QAAQE,WACvBsB,YAAa1B,KAAK4C,iBAClBxD,KAAK,kBAIT,yBAAKZ,UAAU,kBACZ,IACD,uBAAGA,UAAU,kBAAkBuC,GAC/B,uBAAGvC,UAAU,gBAAgB6B,GAC7B,uBAAG7B,UAAU,gBAAgBb,GAAG,UAC5BsD,EAAQjB,KAAKR,MAAMkD,mBAAmBjE,aAG5C,uBAAGD,UAAU,gBAAgBwC,IAE/B,uBAAGxC,UAAU,kBAAb,YACA,6BACE,6BAASA,UAAU,gBACjB,kBAAC,EAAD,CACEkC,KAAMV,KAAK1B,MAAMoC,KACjBN,WAAYJ,KAAKR,MAAMU,QAAQE,WAC/BzB,SAAUqB,KAAKR,MAAMb,SACrB6D,WAAYxC,KAAKwC,cAGrB,wBAAIhE,UAAU,YACXG,EAASsB,KAAI,SAAA4B,GACZ,OACE,yBAAK1B,IAAK0B,EAAQkB,YAChB,kBAAC,EAAD,CACE5C,IAAK0B,EAAQkB,WACbpF,GAAIkE,EAAQkB,WACZhC,OAAQc,EAAQd,OAChBC,KAAMa,EAAQb,KACdtC,KAAMmD,EAAQxB,WACdY,MAAOY,EAAQZ,QACd,IACH,4BACEmC,MAAO,CACLC,QACExB,EAAQd,SAAW,EAAKzC,MAAMoC,KAAKE,SAC/B,QACA,QAERS,QAAS,kBACP,EAAKiC,gBAAgBzB,EAAQd,OAAQc,EAAQkB,cARjD,UAaA,kBAAC,EAAD,CACEQ,aAAc1B,EAAQZ,MACtBnD,UAAW+D,EAAQkB,WACnBrB,YAAa,EAAKkB,iBAClBxD,KAAK,uB,0CAavBY,KAAKwD,aAAaxD,KAAK1B,MAAM8B,YAC7BJ,KAAKyD,cAAczD,KAAK1B,MAAM8B,c,mCAGnBzC,GAAK,IAAD,QV9FW,SAAAA,GAC5B,OAAOT,IAAMC,IAAN,UAAaL,EAAb,qBAAiCa,IAAMJ,MAAK,YACjD,OAD+D,EAAXC,KACxC0C,YU6FZP,CACkBhC,GACfJ,MAAK,SAAA2C,GACJ,EAAKN,SAAS,CAAEM,QAASA,EAAST,WAAW,OAE9CvB,OAAM,SAAAwB,GACL,EAAKE,SAAS,CACZF,IAAK,CACHG,OAAQH,EAAII,SAASD,OACrBE,IAAKL,EAAII,SAAStC,KAAKuC,IACvBW,KAAM,EAAKpC,MAAMoC,MAEnBjB,WAAW,S,oCAKL9B,GAAK,IAAD,QV1Gc,SAAAA,GAChC,OAAOT,IAAMC,IAAN,UAAaL,EAAb,qBAAiCa,EAAjC,cAAgDJ,MAAK,YAC1D,OADwE,EAAXC,KACjDmB,aUyGZgB,CACsBhC,GACnBJ,MAAK,SAAAoB,GACJ,EAAKiB,SAAS,CAAEjB,SAAUA,EAAUc,WAAW,OAEhDvB,OAAM,SAAAwB,GACL,EAAKE,SAAS,CACZF,IAAK,CACHG,OAAQ,IACRE,IAAI,4BAAD,OAA8BpC,EAA9B,oBACH+C,KAAM,EAAKpC,MAAMoC,MAEnBjB,WAAW,S,sCAwBHsB,EAAQpD,IACtBQ,QAAQC,IAAIT,GACRoD,IAAWf,KAAK1B,MAAMoC,KAAKE,YACV8C,OAAOC,QACxB,mDVtHqB,SAAC5C,EAAQpD,GAC7BT,IAAM0G,OAAN,UAAgB9G,EAAhB,qBAAoCa,IUwHrCgC,CAAkBoB,EAAQpD,GAC1BqC,KAAK6D,eAAelG,IAEpBmG,MAAM,yB,qCAKGnG,GAAK,IAAD,OACjBqC,KAAKJ,UAAS,SAAAiD,GAKZ,MAAO,CAAElE,SAHQ,EAAKa,MAAMb,SAASoF,QAAO,SAAAlC,GAC1C,OAAOlE,IAAOkE,EAAQkB,sB,GA/KOxC,IAAMC,WCNtBwD,E,iLAEjB,OACE,oCACE,gCACE,kBAAC,EAAD,CAAQtD,KAAMV,KAAK1B,MAAMoC,QAE3B,8BACE,yCACU,6BACR,0CAEE,2BAAOvB,KAAK,iB,GAZUoB,IAAMC,WCCrByD,E,iLAEjB,OACE,oCACE,gCACE,kBAAC,EAAD,CAAQvD,KAAMV,KAAK1B,MAAMoC,QAE3B,8BACE,uCACQ,6BACN,0CAEE,2BAAOvB,KAAK,UACL,IACT,6BACA,0CAEE,2BAAOA,KAAK,cACL,IACT,6BACA,2CAEF,kBAAC,EAAD,CAAQuB,KAAMV,KAAK1B,MAAMoC,a,GAtBAH,IAAMC,WCCpB0D,E,2MACnB1E,MAAQ,CACN2E,OAAQ,I,wEAIR,OACE,oCACE,gCACE,kBAAC,EAAD,CAAQzD,KAAMV,KAAK1B,MAAMoC,QAE3B,0BAAMlC,UAAU,UACbwB,KAAKR,MAAM2E,OAAOlE,KAAI,SAAA5C,GACrB,OACE,kBAAC,IAAD,CACEmB,UAAU,aACVD,GAAG,kBACHiB,MAAO,CAAEN,KAAM7B,EAAM6B,KAAMkF,KAAM/G,EAAMgH,cAEvC,wBAAI7F,UAAU,aAAab,GAAIN,EAAM6B,KAAMiB,IAAK9C,EAAM6B,MACpD,yBAAKV,UAAU,aACZ,IACD,uBAAGb,GAAG,cAAcN,EAAM6B,MAC1B,uBAAGvB,GAAG,aAAaN,EAAMgH,uB,0CAWtB,IAAD,ObiBbnH,IAAMC,IAAN,UAAaL,EAAb,YAA+BS,MAAK,YACzC,OADuD,EAAXC,KAChC2G,UajBM5G,MAAK,SAAA4G,GACrB,EAAKvE,SAAS,CAAEuE,OAAQA,W,GApCW5D,IAAMC,WCD1B8D,E,iLACT,IAAD,EACgBtE,KAAK1B,MAAMiG,SAAS/E,MAAnCN,EADD,EACCA,KAAMkF,EADP,EACOA,KACd,OACE,oCACE,gCACE,kBAAC,EAAD,CAAQ1D,KAAMV,KAAK1B,MAAMoC,QAE3B,8BACE,iCACE,yBAAKlC,UAAU,QAAQb,GAAE,UAAKqC,KAAKd,KAAV,cACvB,uBAAGvB,GAAG,uBAAuBuB,GAC7B,uBAAGvB,GAAG,uBAAuByG,IAE/B,kBAAC,EAAD,CAAelF,KAAMA,W,GAdUqB,IAAMC,WCwClCgE,E,2MA9BbhF,MAAQ,CACNkB,KAAM,CAAEE,SAAU,YAAaD,SAAU,W,wEAGzC,OACE,yBAAKnC,UAAU,OACb,gCACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAUT,KAAK,IAAI2C,KAAMV,KAAKR,MAAMkB,OACpC,kBAAC,EAAD,CAAS3C,KAAK,wBAAwB2C,KAAMV,KAAKR,MAAMkB,OACvD,kBAAC,EAAD,CAAc3C,KAAK,gBAAgB2C,KAAMV,KAAKR,MAAMkB,OACpD,kBAAC,EAAD,CAAa3C,KAAK,UAAU2C,KAAMV,KAAKR,MAAMkB,OAC7C,kBAAC,EAAD,CAAe3C,KAAK,kBAAkB2C,KAAMV,KAAKR,MAAMkB,OACvD,kBAAC,EAAD,CAAO3C,KAAK,UAAU2C,KAAMV,KAAKR,MAAMkB,OACvC,kBAAC,EAAD,CAAQ3C,KAAK,WAAW2C,KAAMV,KAAKR,MAAMkB,OACzC,kBAAC,EAAD,CACEhB,IAAK,CACHG,OAAQ,IACRE,IAAK,kBACLW,KAAMV,KAAKR,MAAMkB,MAEnB+D,SAAO,W,GAtBHlE,IAAMC,WCDJkE,QACW,cAA7BhB,OAAOa,SAASI,UAEe,UAA7BjB,OAAOa,SAASI,UAEhBjB,OAAOa,SAASI,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM5H,MAAK,SAAA6H,GACjCA,EAAaC,kB","file":"static/js/main.6c04f5b1.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseURL = \"https://nc-news-julia.herokuapp.com/api\";\n\nexport const getArticles = (sort_term, topicName) => {\n  // const queryOne = topicName ? `?topic=${topicName}` : ``;\n  // const queryTwo = sort_term ? `?sort_by=${sort_term}` : ``;\n  return axios\n    .get(`${baseURL}/articles`, {\n      params: { topic: topicName, sort_by: sort_term }\n    })\n    .then(({ data }) => {\n      return data.articles;\n    });\n};\n\nexport const getArticleById = id => {\n  return axios.get(`${baseURL}/articles/${id}`).then(({ data }) => {\n    return data.article;\n  });\n};\n\nexport const getArticleComments = id => {\n  return axios.get(`${baseURL}/articles/${id}/comments`).then(({ data }) => {\n    return data.comments;\n  });\n};\n\nexport const patchArticleVotes = (id, amnt, endpoint, commentId) => {\n  const path = endpoint ? `/comments/${commentId}` : `/articles/${id}`;\n  return axios\n    .patch(`${baseURL}/${path}`, { inc_votes: amnt })\n    .then(({ data }) => {\n      return data;\n    })\n    .catch(console.log);\n};\n\nexport const postComment = (comment, id) => {\n  // console.log(comment);\n  return axios\n    .post(`${baseURL}/articles/${id}/comments`, {\n      username: comment.username,\n      body: comment.body\n    })\n    .then(({ data }) => {\n      return data;\n    })\n    .catch(console.log);\n};\n\nexport const deleteComment = (author, id) => {\n  return axios.delete(`${baseURL}/comments/${id}`);\n};\n\nexport const fetchTopics = () => {\n  return axios.get(`${baseURL}/topics`).then(({ data }) => {\n    return data.topics;\n  });\n};\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nconst ArticleCard = props => {\n  return (\n    <>\n      <Link to={`/articles/${props.id}`} className=\"article_link\">\n        <div className=\"article_card_container\" id={props.id.toString()}>\n          <div className=\"article_container\">\n            <li className=\"article_card\">\n              {/* <img\n            src=\"https://cdn2.vectorstock.com/i/1000x1000/42/71/temporary-film-job-text-background-word-cloud-vector-16054271.jpg\"\n            alt=\"article\"\n            className=\"article_card_img\"\n          /> */}\n              <p className=\"article_card_date_tag\">. {props.date}</p>\n              <p className=\"article_card_topic_tag\">{props.topic}</p>\n              <p className=\"article_card_comment_tag\">\n                {props.comments} comments\n              </p>\n              <p className=\"article_card_title\"> {props.title}</p>\n              {/* <img\n              src=\"https://seeklogo.net/wp-content/uploads/2017/04/abc-news-logo-01.png\"\n              alt=\"logo\"\n              className=\"logo_card\"\n            /> */}\n            </li>\n          </div>\n        </div>\n      </Link>\n    </>\n  );\n};\nexport default ArticleCard;\n","import React from \"react\";\n\nconst ArticleSorter = props => {\n  // state = {\n  //   created_at: false,\n  //   comment_count: false,\n  //   votes: false\n  // };\n\n  const handleCheck = (target, fetchArticles) => {\n    // const checkboxes = target.name;\n    // checkboxes.forEach(box => {\n    //   if (box !== target) box.checked = false;\n    // });\n    fetchArticles(target.value, props.slug);\n  };\n\n  return (\n    <form className=\"dropdown\">\n      <p className=\"dropdown_title\">SORT</p>\n      <label className=\"dropdown_label\">\n        DATE\n        <input\n          className=\"dropdown_input\"\n          type=\"radio\"\n          name=\"check\"\n          value=\"created_at\"\n          onChange={event => handleCheck(event.target, props.fetchArticles)}\n        />\n      </label>{\" \"}\n      <br />\n      <label className=\"dropdown_label\">\n        Comments\n        <input\n          className=\"dropdown_input\"\n          type=\"radio\"\n          name=\"check\"\n          value=\"comment_count\"\n          onChange={event => handleCheck(event.target, props.fetchArticles)}\n        />\n      </label>\n      <br />\n      <label className=\"dropdown_label\">\n        Votes\n        <input\n          className=\"dropdown_input\"\n          type=\"radio\"\n          name=\"check\"\n          value=\"votes\"\n          onChange={event => handleCheck(event.target, props.fetchArticles)}\n        />\n      </label>\n    </form>\n  );\n};\n\nexport default ArticleSorter;\n","import React from \"react\";\nimport * as api from \"../api\";\n\nimport ArticleCard from \"../components/subComponents/ArticleCard\";\nimport ArticleSorter from \"../components/subComponents/ArticleSorter\";\n\nexport default class ArticleFeeder extends React.Component {\n  state = {\n    articles: [],\n    isLoading: true,\n    err: null\n  };\n  render() {\n    // const {\n    //   user: { username }\n    // } = this.props;\n    // console.log(username);\n    const { articles } = this.state;\n    if (this.state.isLoading)\n      return <p className=\"loadIndicator\">Loading...</p>;\n    if (this.state.err !== null)\n      return (\n        <>\n          <h1>this.state.err.status</h1>\n          <h2>this.state.err.msg</h2>\n        </>\n      );\n    return (\n      <section className=\"content\">\n        <div className=\"article_sorter\">\n          <ArticleSorter\n            fetchArticles={this.fetchArticles}\n            slug={this.props.slug}\n          />\n        </div>\n        <div className=\"articles\">\n          <ul\n            className=\"\n          \"\n          >\n            <h3 className=\"articles_title\">ARTICLES</h3>\n            {articles.map(article => {\n              return (\n                <ArticleCard\n                  key={article.article_id}\n                  id={article.article_id}\n                  date={article.created_at}\n                  topic={article.topic}\n                  title={article.title}\n                  comments={article.comment_count}\n                />\n              );\n            })}\n          </ul>\n        </div>\n      </section>\n    );\n  }\n\n  componentDidMount() {\n    this.fetchArticles(null, this.props.slug);\n  }\n\n  // componentDidUpdate(prevState) {\n  //   if (prevState !== this.state) {\n  //     this.filterArticlesByTopic(this.props.slug);\n  //   }\n  // }\n\n  fetchArticles = (sort_term, topic) => {\n    api\n      .getArticles(sort_term, topic)\n      .then(articles => {\n        this.setState({ articles: articles, isLoading: false });\n      })\n      .catch(err => {\n        this.setState({\n          err: { status: err.response.status, msg: err.response.data.msg },\n          isLoading: false\n        });\n      });\n  };\n\n  // filterArticlesByTopic(slug) {\n  //   if (slug) {\n  //     this.setState(currentState => {\n  //       const newState = {\n  //         ...currentState\n  //       };\n  //       console.log(newState);\n\n  //       const topics = newState.articles.filter(article => {\n  //         return article.topic === slug;\n  //       });\n\n  //       const newNewState = { ...currentState, articles: [...topics] };\n\n  //       return newNewState;\n  //     });\n  //   }\n  // }\n\n  // this.filterArticlesByTopic(this.props.slug)\n}\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\n\nconst Header = ({ user }) => {\n  if (user.password) {\n    return (\n      <>\n        {/* <section className=\"sub_header\">\n          <img\n            src=\"https://seeklogo.net/wp-content/uploads/2017/04/abc-news-logo-01.png\"\n            alt=\"logo\"\n            className=\"logo\"\n          /> */}\n        {/* <h2 className=\"sub_heading\">BRINGING YOU THE BEST OF FAKE NEWS!</h2> */}\n        {/* </section> */}\n        <nav className=\"nav\">\n          <ul className=\"nav_content\">\n            <Link to=\"/\" className=\"nav_link_home\" id=\"nav_link\">\n              <i\n                className=\"fa fa-home\"\n                // onMouseOver={event => {\n                //   chbg(event);\n                // }}\n              >\n                <p id=\"home\">Home</p>\n              </i>\n            </Link>\n            <Link to=\"/topics\" className=\"nav_link_topics\" id=\"nav_link\">\n              <i className=\"fa fa-book\" id=\"icon\">\n                <p id=\"topics\">Topics</p>\n              </i>\n            </Link>\n            <Link\n              to=\"/socialMediaLinks\"\n              className=\"nav_link_social\"\n              id=\"nav_link\"\n            >\n              <i className=\"fa fa-info\" id=\"icon\">\n                <p id=\"social\">Social</p>\n              </i>\n            </Link>\n            <Link to=\"null\" className=\"nav_link_like\" id=\"nav_link\">\n              <i className=\"fa fa-heart\" id=\"icon\">\n                <p id=\"like\">Like</p>\n              </i>\n            </Link>\n            <Link to=\"/log_in\" className=\"nav_link_user\" id=\"nav_link\">\n              <i className=\"fa fa-sign-out\" id=\"icon\">\n                <p id=\"user\">{user.username}</p>\n              </i>\n            </Link>\n          </ul>\n        </nav>\n      </>\n    );\n  }\n  return (\n    <div>\n      <nav>\n        <ul>\n          <Link to=\"/\">Home</Link>\n          <Link to=\"/topics\">Topics</Link>\n          <Link to=\"/socialMediaLinks\">SocialMediaLinks</Link>\n          <Link to=\"/sign_up\">Sign up</Link>\n          <Link to=\"/log_in\">Log in</Link>\n        </ul>\n      </nav>\n      <header>\n        <h1>Logo</h1>\n        <h2>Description</h2>\n      </header>\n    </div>\n  );\n};\n\n// const styleIt = event => {\n//   const className = event.target.children[0].className;\n//   return (\n//     <style\n//       p={{\n//         __html: `\n//       .styled { display: inline }\n//     `\n//       }}\n//     />\n//   );\n// };\n\n// const chbg = event => {\n//   const className = event.target.children[0].className;\n//   {\n//     document.getElementByClassName(className).style.display = \"inline\";\n//   }\n// };\n\nexport default Header;\n","import React from \"react\";\n\nimport ArticleFeeder from \"../components/ArticleFeeder\";\nimport Header from \"./Header\";\n\nconst Homepage = ({ user }) => {\n  return (\n    <div>\n      <header>\n        <Header user={user} />\n      </header>\n      <main className=\"article_feed\">\n        <ArticleFeeder user={user} />\n      </main>\n    </div>\n  );\n};\n\nexport default Homepage;\n","import React from \"react\";\n\nconst CommentCard = props => {\n  const { date, author, body, votes } = props;\n  return (\n    <>\n      <li className=\"comment\">\n        <div className=\"comment_header\">\n          <p className=\"comment_author\">{author}</p>\n          <p className=\"comment_votes\">{votes}</p>\n          <p className=\"comment_date\">{date}</p>\n        </div>\n        <p className=\"comment_body\">{body}</p>\n      </li>\n    </>\n  );\n};\n\nexport default CommentCard;\n","import React from \"react\";\nimport * as api from \"../../api\";\n\nexport default class VotesIncrementer extends React.Component {\n  state = {\n    hasVotedUp: false,\n    txt: \"VOTE 👍\"\n  };\n  render() {\n    return (\n      <>\n        <button\n          onClick={() => this.incrementVotes(this.props)}\n          className=\"article_votes_button\"\n        >\n          <span role=\"img\" aria-label=\"thumbsUp\">\n            {this.state.txt}\n          </span>\n        </button>\n      </>\n    );\n  }\n\n  incrementVotes(prop) {\n    console.log(prop.commentId);\n    if (this.state.hasVotedUp === false) {\n      if (prop.name === \"articleVoter\") {\n        prop.displayVote(prop.commentId, 1, \"voteChangeArticle\");\n        api.patchArticleVotes(prop.id, 1).then(article => {\n          // need to set the state in Article.jsx to the returned article and display the result\n          this.setState({ hasVotedUp: true, txt: \"UNVOTE 👎\" });\n        });\n      } else if (prop.name === \"comments\") {\n        prop.displayVote(prop.commentId, 1, \"voteChangeComment\");\n        api\n          .patchArticleVotes(prop.id, 1, prop.name, prop.commentId)\n          .then(article => {\n            // need to set the state in Article.jsx to the returned article and display the result\n            this.setState({ hasVotedUp: true, txt: \"UNVOTE 👎\" });\n          });\n      }\n    } else {\n      if (prop.name === \"articleVoter\") {\n        prop.displayVote(prop.commentId, 0, \"voteChangeArticle\");\n        api.patchArticleVotes(prop.id, -1).then(article => {\n          this.setState({ hasVotedUp: false, txt: \"VOTE 👍\" });\n        });\n      } else if (prop.name === \"comments\") {\n        prop.displayVote(prop.commentId, -1, \"voteChangeComment\");\n        api\n          .patchArticleVotes(prop.id, -1, prop.name, prop.commentId)\n          .then(article => {\n            // need to set the state in Article.jsx to the returned article and display the result\n            this.setState({ hasVotedUp: false, txt: \"VOTE 👍\" });\n          });\n      }\n    }\n  }\n}\n","import React from \"react\";\nimport Header from \"./Header\";\n// import { Link } from \"@reach/router\";\n\nconst ErrorShower = err => {\n  return (\n    <div>\n      <header>\n        <Header user={err.err.user} />\n      </header>\n      {console.log(err)}\n      <h1>{err.err.status}</h1>\n      <h2>{err.err.msg}</h2>\n    </div>\n  );\n};\n\nexport default ErrorShower;\n","import React from \"react\";\n// import Header from \"../Header\";\nimport * as api from \"../../api\";\n\nexport default class CommentMaker extends React.Component {\n  state = {\n    comment: { username: this.props.user.username, body: \"\" },\n    hasCommented: true\n  };\n  render() {\n    return (\n      <>\n        {/* <header>\n          <Header user={this.props.user} />\n        </header> */}\n        <main>\n          <form onSubmit={event => this.createComment(event)}>\n            <p className=\"post_comment_title\">Post a Comment</p>\n            <br />\n            <label>\n              <textarea\n                rows=\"20\"\n                cols=\"20\"\n                placeholder=\"Comment Content\"\n                required\n                className=\"post_comment_box\"\n                value={this.state.comment.body}\n                onChange={event => this.handleChange(event)}\n              ></textarea>\n            </label>{\" \"}\n            <br />\n            <button className=\"post_comment_button\">Submit</button>\n          </form>\n        </main>\n      </>\n    );\n  }\n\n  handleChange(event) {\n    const body = event.target.value;\n    const user = this.props.user;\n    this.setState({ comment: { username: user.username, body: body } });\n  }\n\n  createComment(event) {\n    event.preventDefault();\n    this.setState({\n      comment: { username: null, body: \"\" },\n      hasCommented: true\n    });\n    api.postComment(this.state.comment, this.props.article_id).then(comment => {\n      this.props.addComment(comment.comment);\n    });\n  }\n\n  // renderComment(comment) {\n  //   this.setState(currentState => {\n  //     const newState = (currentState = {\n  //       ...this.state,\n  //       comments: [...this.props.comments]\n  //     });\n  //     return newState;\n  //   });\n  //   console.log(this.state);\n  // }\n}\n","import React from \"react\";\nimport * as api from \"../api\";\nimport Header from \"./Header\";\n\nimport CommentCard from \"./subComponents/CommentCard\";\nimport VotesIncrementer from \"./subComponents/VotesIncrementer\";\nimport ErrorShower from \"../components/ErrorShower\";\nimport CommentMaker from \"./subComponents/CommentMaker\";\n\nexport default class Article extends React.Component {\n  state = {\n    article: {},\n    comments: [],\n    isLoading: true,\n    err: null,\n    voteChangeArticle: 0,\n    voteChangeComment: 0,\n    hasCommented: false\n  };\n\n  render() {\n    if (this.state.isLoading)\n      return <p className=\"loadIndicator\">Loading...</p>;\n    if (this.state.err !== null) return <ErrorShower err={this.state.err} />;\n    const { title, created_at, author, votes, body } = this.state.article;\n    const { comments } = this.state;\n    return (\n      <>\n        <header>\n          {\" \"}\n          <Header user={this.props.user} />\n        </header>\n        <main className=\"article\">\n          <div>\n            <div>\n              <h4 className=\"article_title\">{title}</h4>\n              <VotesIncrementer\n                articleVotes={this.state.article.votes}\n                id={this.state.article.article_id}\n                displayVote={this.handleVoteChange}\n                name=\"articleVoter\"\n              />\n            </div>\n\n            <div className=\"article_header\">\n              {\" \"}\n              <p className=\"article_author\">{author}</p>\n              <p className=\"article_date\">{created_at}</p>\n              <p className=\"article_votes\" id=\"voter\">\n                {(votes + this.state.voteChangeArticle).toString()}\n              </p>\n            </div>\n            <p className=\"article_body\">{body}</p>\n          </div>\n          <p className=\"comments_title\">Comments</p>\n          <div>\n            <section className=\"comment_form\">\n              <CommentMaker\n                user={this.props.user}\n                article_id={this.state.article.article_id}\n                comments={this.state.comments}\n                addComment={this.addComment}\n              />\n            </section>\n            <ul className=\"comments\">\n              {comments.map(comment => {\n                return (\n                  <div key={comment.comment_id}>\n                    <CommentCard\n                      key={comment.comment_id}\n                      id={comment.comment_id}\n                      author={comment.author}\n                      body={comment.body}\n                      date={comment.created_at}\n                      votes={comment.votes}\n                    />{\" \"}\n                    <button\n                      style={{\n                        display:\n                          comment.author === this.props.user.username\n                            ? \"block\"\n                            : \"none\"\n                      }}\n                      onClick={() =>\n                        this.deletionChecker(comment.author, comment.comment_id)\n                      }\n                    >\n                      DELETE\n                    </button>\n                    <VotesIncrementer\n                      commentVotes={comment.votes}\n                      commentId={comment.comment_id}\n                      displayVote={this.handleVoteChange}\n                      name=\"comments\"\n                    />\n                  </div>\n                );\n              })}\n            </ul>\n          </div>\n        </main>\n      </>\n    );\n  }\n\n  componentDidMount() {\n    this.fetchArticle(this.props.article_id);\n    this.fetchComments(this.props.article_id);\n  }\n\n  fetchArticle(id) {\n    api\n      .getArticleById(id)\n      .then(article => {\n        this.setState({ article: article, isLoading: false });\n      })\n      .catch(err => {\n        this.setState({\n          err: {\n            status: err.response.status,\n            msg: err.response.data.msg,\n            user: this.props.user\n          },\n          isLoading: false\n        });\n      });\n  }\n\n  fetchComments(id) {\n    api\n      .getArticleComments(id)\n      .then(comments => {\n        this.setState({ comments: comments, isLoading: false });\n      })\n      .catch(err => {\n        this.setState({\n          err: {\n            status: 400,\n            msg: `cannot get article of id ${id}, does not exist`,\n            user: this.props.user\n          },\n          isLoading: false\n        });\n      });\n  }\n\n  handleVoteChange = (id, amnt, value) => {\n    if (value === \"voteChangeComment\") {\n      this.setState(currentState => {\n        const newSate = {\n          ...currentState,\n          comments: [...currentState.comments]\n        };\n        newSate.comments.map(comment => {\n          if (id === comment.comment_id) {\n            comment.votes += amnt;\n          }\n        });\n        return newSate;\n      });\n    } else {\n      this.setState({ voteChangeArticle: amnt });\n    }\n  };\n\n  deletionChecker(author, id) {\n    console.log(id);\n    if (author === this.props.user.username) {\n      const willDelete = window.confirm(\n        \"Are you sure you want to delete this comment?\"\n      );\n      if (willDelete) {\n        api.deleteComment(author, id);\n        this.deletedComment(id);\n      } else {\n        alert(\"deletion cancelled\");\n      }\n    }\n  }\n\n  deletedComment(id) {\n    this.setState(currentState => {\n      // const newState = { ...this.sate, comments: this.state.comments };\n      const newState = this.state.comments.filter(comment => {\n        return id !== comment.comment_id;\n      });\n      return { comments: newState };\n    });\n  }\n\n  addComment = comment => {\n    this.setState(currentState => {\n      const newState = { ...this.sate, comments: this.state.comments };\n      newState.comments.unshift(comment);\n      return newState;\n    });\n  };\n}\n","import React from \"react\";\nimport Header from \"./Header\";\n\nexport default class SignUp extends React.Component {\n  render() {\n    return (\n      <>\n        <header>\n          <Header user={this.props.user} />\n        </header>\n        <main>\n          <form>\n            SIGN UP <br />\n            <label>\n              Username\n              <input type=\"text\" />\n            </label>\n          </form>\n        </main>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport Header from \"./Header\";\nimport SignUp from \"./SignUp\";\n\nexport default class LogIn extends React.Component {\n  render() {\n    return (\n      <>\n        <header>\n          <Header user={this.props.user} />\n        </header>\n        <main>\n          <form>\n            LogIn <br />\n            <label>\n              Username\n              <input type=\"text\" />\n            </label>{\" \"}\n            <br />\n            <label>\n              Password\n              <input type=\"password\" />\n            </label>{\" \"}\n            <br />\n            <button>Log In</button>\n          </form>\n          <SignUp user={this.props.user} />\n        </main>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Link } from \"@reach/router\";\nimport Header from \"../components/Header\";\nimport * as api from \"../api\";\n\nexport default class TopicFeeder extends React.Component {\n  state = {\n    topics: []\n  };\n\n  render() {\n    return (\n      <>\n        <header>\n          <Header user={this.props.user} />\n        </header>\n        <main className=\"topics\">\n          {this.state.topics.map(topic => {\n            return (\n              <Link\n                className=\"topic_link\"\n                to=\"/topic/articles\"\n                state={{ slug: topic.slug, desc: topic.description }}\n              >\n                <li className=\"topic_card\" id={topic.slug} key={topic.slug}>\n                  <div className=\"topic_tag\">\n                    {\" \"}\n                    <p id=\"topic_slug\">{topic.slug}</p>\n                    <p id=\"topic_dec\">{topic.description}</p>\n                  </div>\n                </li>\n              </Link>\n            );\n          })}\n        </main>\n      </>\n    );\n  }\n\n  componentDidMount() {\n    api.fetchTopics().then(topics => {\n      this.setState({ topics: topics });\n    });\n  }\n}\n","import React from \"react\";\nimport Header from \"../components/Header\";\nimport ArticleFeeder from \"./ArticleFeeder\";\n\nexport default class TopicArticles extends React.Component {\n  render() {\n    const { slug, desc } = this.props.location.state;\n    return (\n      <>\n        <header>\n          <Header user={this.props.user} />\n        </header>\n        <main>\n          <section>\n            <div className=\"Topic\" id={`${this.slug}_articles`}>\n              <p id=\"topic_articles_slug\">{slug}</p>\n              <p id=\"topic_articles_desc\">{desc}</p>\n            </div>\n            <ArticleFeeder slug={slug} />\n          </section>\n        </main>\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport { Router } from \"@reach/router\";\nimport \"./App.css\";\n\nimport Homepage from \"./components/Homepage\";\nimport Article from \"./components/Article\";\nimport ErrorShower from \"./components/ErrorShower\";\nimport LogIn from \"./components/LogIn\";\nimport TopicFeeder from \"./components/TopicFeeder\";\nimport SignUp from \"./components/SignUp\";\nimport CommentMaker from \"./components/subComponents/CommentMaker\";\nimport TopicArticles from \"./components/TopicArticles\";\n\nclass App extends React.Component {\n  state = {\n    user: { username: \"jessjelly\", password: \"abc123\" }\n  };\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <Router>\n            <Homepage path=\"/\" user={this.state.user} />\n            <Article path=\"/articles/:article_id\" user={this.state.user} />\n            <CommentMaker path=\"/post_comment\" user={this.state.user} />\n            <TopicFeeder path=\"/topics\" user={this.state.user} />\n            <TopicArticles path=\"/topic/articles\" user={this.state.user} />\n            <LogIn path=\"/log_in\" user={this.state.user} />\n            <SignUp path=\"/sign_up\" user={this.state.user} />\n            <ErrorShower\n              err={{\n                status: 404,\n                msg: \"Route not found\",\n                user: this.state.user\n              }}\n              default\n            />\n          </Router>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}