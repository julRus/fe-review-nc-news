{"ast":null,"code":"var _jsxFileName = \"/home/julia/northcoders/FRONTEND/fe-review/fe-nc-news/nc-news/src/components/subComponents/SortArticles.jsx\";\nimport React from \"react\";\nexport default class SortArticles extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      created_at: false,\n      comment_count: false,\n      votes: false\n    };\n\n    this.handleCheck = (sort_term, fetchArticles) => {\n      // const checkboxes = target.name;\n      // checkboxes.forEach(box => {\n      //   if (box !== target) box.checked = false;\n      // });\n      const isChecked = this.state.isChecked;\n\n      if (this.state[sort_term]) {\n        fetchArticles(sort_term);\n        this.setState({\n          [sort_term]: true\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"Sort Articles By \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"DATE\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"check\",\n      value: \"created_at\",\n      onClick: event => this.handleCheck(event.target.value, this.props.fetchArticles),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    })), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, \"Comments\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"check\",\n      value: \"comment_count\",\n      onClick: event => this.handleCheck(event.target.value, this.props.fetchArticles),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    })), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"Votes\", React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"check\",\n      value: \"votes\",\n      onClick: event => this.handleCheck(event.target.value, this.props.fetchArticles),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["/home/julia/northcoders/FRONTEND/fe-review/fe-nc-news/nc-news/src/components/subComponents/SortArticles.jsx"],"names":["React","SortArticles","Component","state","created_at","comment_count","votes","handleCheck","sort_term","fetchArticles","isChecked","setState","render","event","target","value","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,YAAN,SAA2BD,KAAK,CAACE,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACxDC,KADwD,GAChD;AACNC,MAAAA,UAAU,EAAE,KADN;AAENC,MAAAA,aAAa,EAAE,KAFT;AAGNC,MAAAA,KAAK,EAAE;AAHD,KADgD;;AAAA,SAkDxDC,WAlDwD,GAkD1C,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AAC1C;AACA;AACA;AACA;AAJ0C,YAKlCC,SALkC,GAKpB,KAAKP,KALe,CAKlCO,SALkC;;AAM1C,UAAI,KAAKP,KAAL,CAAWK,SAAX,CAAJ,EAA2B;AACzBC,QAAAA,aAAa,CAACD,SAAD,CAAb;AACA,aAAKG,QAAL,CAAc;AAAE,WAACH,SAAD,GAAa;AAAf,SAAd;AACD;AACF,KA5DuD;AAAA;;AAOxDI,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADnB,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAC,YAHR;AAIE,MAAA,OAAO,EAAEC,KAAK,IACZ,KAAKN,WAAL,CAAiBM,KAAK,CAACC,MAAN,CAAaC,KAA9B,EAAqC,KAAKC,KAAL,CAAWP,aAAhD,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,EAYW,GAZX,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAbF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAC,eAHR;AAIE,MAAA,OAAO,EAAEI,KAAK,IACZ,KAAKN,WAAL,CAAiBM,KAAK,CAACC,MAAN,CAAaC,KAA9B,EAAqC,KAAKC,KAAL,CAAWP,aAAhD,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAdF,EAyBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBF,EA0BE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAC,OAHR;AAIE,MAAA,OAAO,EAAEI,KAAK,IACZ,KAAKN,WAAL,CAAiBM,KAAK,CAACC,MAAN,CAAaC,KAA9B,EAAqC,KAAKC,KAAL,CAAWP,aAAhD,CALJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CA1BF,CADF;AAwCD;;AAhDuD","sourcesContent":["import React from \"react\";\n\nexport default class SortArticles extends React.Component {\n  state = {\n    created_at: false,\n    comment_count: false,\n    votes: false\n  };\n\n  render() {\n    return (\n      <form>\n        Sort Articles By <br />\n        <label>\n          DATE\n          <input\n            type=\"checkbox\"\n            name=\"check\"\n            value=\"created_at\"\n            onClick={event =>\n              this.handleCheck(event.target.value, this.props.fetchArticles)\n            }\n          />\n        </label>{\" \"}\n        <br />\n        <label>\n          Comments\n          <input\n            type=\"checkbox\"\n            name=\"check\"\n            value=\"comment_count\"\n            onClick={event =>\n              this.handleCheck(event.target.value, this.props.fetchArticles)\n            }\n          />\n        </label>\n        <br />\n        <label>\n          Votes\n          <input\n            type=\"checkbox\"\n            name=\"check\"\n            value=\"votes\"\n            onClick={event =>\n              this.handleCheck(event.target.value, this.props.fetchArticles)\n            }\n          />\n        </label>\n      </form>\n    );\n  }\n\n  handleCheck = (sort_term, fetchArticles) => {\n    // const checkboxes = target.name;\n    // checkboxes.forEach(box => {\n    //   if (box !== target) box.checked = false;\n    // });\n    const { isChecked } = this.state;\n    if (this.state[sort_term]) {\n      fetchArticles(sort_term);\n      this.setState({ [sort_term]: true });\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}