{"ast":null,"code":"import axios from \"axios\";\nconst baseURL = \"https://nc-news-julia.herokuapp.com/api\";\nexport const getArticles = (sort_term, topicName) => {\n  const queryOne = topicName ? \"?topic=\".concat(topicName) : \"\";\n  const queryTwo = sort_term ? \"?sort_by=\".concat(sort_term) : \"\";\n  return axios.get(\"\".concat(baseURL, \"/articles?\").concat(queryTwo, \"&&\").concat(queryOne), {\n    params: {\n      topic: topicName,\n      sort_by: sort_term\n    }\n  }).then(({\n    data\n  }) => {\n    return data.articles;\n  });\n};\nexport const getArticleById = id => {\n  return axios.get(\"\".concat(baseURL, \"/articles/\").concat(id)).then(({\n    data\n  }) => {\n    return data.article;\n  });\n};\nexport const getArticleComments = id => {\n  return axios.get(\"\".concat(baseURL, \"/articles/\").concat(id, \"/comments\")).then(({\n    data\n  }) => {\n    return data.comments;\n  });\n};\nexport const patchArticleVotes = (id, amnt, endpoint, commentId) => {\n  const path = endpoint ? \"/comments/\".concat(commentId) : \"/articles/\".concat(id);\n  return axios.patch(\"\".concat(baseURL, \"/\").concat(path), {\n    inc_votes: amnt\n  }).then(({\n    data\n  }) => {\n    return data;\n  }).catch(console.log);\n};\nexport const postComment = (comment, id) => {\n  // console.log(comment);\n  return axios.post(\"\".concat(baseURL, \"/articles/\").concat(id, \"/comments\"), {\n    username: comment.username,\n    body: comment.body\n  }).then(({\n    data\n  }) => {\n    return data;\n  }).catch(console.log);\n};\nexport const deleteComment = (author, id) => {\n  return axios.delete(\"\".concat(baseURL, \"/comments/\").concat(id));\n};\nexport const fetchTopics = () => {\n  return axios.get(\"\".concat(baseURL, \"/topics\")).then(({\n    data\n  }) => {\n    return data.topics;\n  });\n};","map":{"version":3,"sources":["/home/julia/northcoders/FRONTEND/fe-review/fe-nc-news/nc-news/src/api.js"],"names":["axios","baseURL","getArticles","sort_term","topicName","queryOne","queryTwo","get","params","topic","sort_by","then","data","articles","getArticleById","id","article","getArticleComments","comments","patchArticleVotes","amnt","endpoint","commentId","path","patch","inc_votes","catch","console","log","postComment","comment","post","username","body","deleteComment","author","delete","fetchTopics","topics"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,yCAAhB;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACnD,QAAMC,QAAQ,GAAGD,SAAS,oBAAaA,SAAb,MAA1B;AACA,QAAME,QAAQ,GAAGH,SAAS,sBAAeA,SAAf,MAA1B;AACA,SAAOH,KAAK,CACTO,GADI,WACGN,OADH,uBACuBK,QADvB,eACoCD,QADpC,GACgD;AACnDG,IAAAA,MAAM,EAAE;AAAEC,MAAAA,KAAK,EAAEL,SAAT;AAAoBM,MAAAA,OAAO,EAAEP;AAA7B;AAD2C,GADhD,EAIJQ,IAJI,CAIC,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAc;AAClB,WAAOA,IAAI,CAACC,QAAZ;AACD,GANI,CAAP;AAOD,CAVM;AAYP,OAAO,MAAMC,cAAc,GAAGC,EAAE,IAAI;AAClC,SAAOf,KAAK,CAACO,GAAN,WAAaN,OAAb,uBAAiCc,EAAjC,GAAuCJ,IAAvC,CAA4C,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAc;AAC/D,WAAOA,IAAI,CAACI,OAAZ;AACD,GAFM,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,kBAAkB,GAAGF,EAAE,IAAI;AACtC,SAAOf,KAAK,CAACO,GAAN,WAAaN,OAAb,uBAAiCc,EAAjC,gBAAgDJ,IAAhD,CAAqD,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAc;AACxE,WAAOA,IAAI,CAACM,QAAZ;AACD,GAFM,CAAP;AAGD,CAJM;AAMP,OAAO,MAAMC,iBAAiB,GAAG,CAACJ,EAAD,EAAKK,IAAL,EAAWC,QAAX,EAAqBC,SAArB,KAAmC;AAClE,QAAMC,IAAI,GAAGF,QAAQ,uBAAgBC,SAAhB,wBAA2CP,EAA3C,CAArB;AACA,SAAOf,KAAK,CACTwB,KADI,WACKvB,OADL,cACgBsB,IADhB,GACwB;AAAEE,IAAAA,SAAS,EAAEL;AAAb,GADxB,EAEJT,IAFI,CAEC,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAc;AAClB,WAAOA,IAAP;AACD,GAJI,EAKJc,KALI,CAKEC,OAAO,CAACC,GALV,CAAP;AAMD,CARM;AAUP,OAAO,MAAMC,WAAW,GAAG,CAACC,OAAD,EAAUf,EAAV,KAAiB;AAC1C;AACA,SAAOf,KAAK,CACT+B,IADI,WACI9B,OADJ,uBACwBc,EADxB,gBACuC;AAC1CiB,IAAAA,QAAQ,EAAEF,OAAO,CAACE,QADwB;AAE1CC,IAAAA,IAAI,EAAEH,OAAO,CAACG;AAF4B,GADvC,EAKJtB,IALI,CAKC,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAc;AAClB,WAAOA,IAAP;AACD,GAPI,EAQJc,KARI,CAQEC,OAAO,CAACC,GARV,CAAP;AASD,CAXM;AAaP,OAAO,MAAMM,aAAa,GAAG,CAACC,MAAD,EAASpB,EAAT,KAAgB;AAC3C,SAAOf,KAAK,CAACoC,MAAN,WAAgBnC,OAAhB,uBAAoCc,EAApC,EAAP;AACD,CAFM;AAIP,OAAO,MAAMsB,WAAW,GAAG,MAAM;AAC/B,SAAOrC,KAAK,CAACO,GAAN,WAAaN,OAAb,cAA+BU,IAA/B,CAAoC,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAc;AACvD,WAAOA,IAAI,CAAC0B,MAAZ;AACD,GAFM,CAAP;AAGD,CAJM","sourcesContent":["import axios from \"axios\";\n\nconst baseURL = \"https://nc-news-julia.herokuapp.com/api\";\n\nexport const getArticles = (sort_term, topicName) => {\n  const queryOne = topicName ? `?topic=${topicName}` : ``;\n  const queryTwo = sort_term ? `?sort_by=${sort_term}` : ``;\n  return axios\n    .get(`${baseURL}/articles?${queryTwo}&&${queryOne}`, {\n      params: { topic: topicName, sort_by: sort_term }\n    })\n    .then(({ data }) => {\n      return data.articles;\n    });\n};\n\nexport const getArticleById = id => {\n  return axios.get(`${baseURL}/articles/${id}`).then(({ data }) => {\n    return data.article;\n  });\n};\n\nexport const getArticleComments = id => {\n  return axios.get(`${baseURL}/articles/${id}/comments`).then(({ data }) => {\n    return data.comments;\n  });\n};\n\nexport const patchArticleVotes = (id, amnt, endpoint, commentId) => {\n  const path = endpoint ? `/comments/${commentId}` : `/articles/${id}`;\n  return axios\n    .patch(`${baseURL}/${path}`, { inc_votes: amnt })\n    .then(({ data }) => {\n      return data;\n    })\n    .catch(console.log);\n};\n\nexport const postComment = (comment, id) => {\n  // console.log(comment);\n  return axios\n    .post(`${baseURL}/articles/${id}/comments`, {\n      username: comment.username,\n      body: comment.body\n    })\n    .then(({ data }) => {\n      return data;\n    })\n    .catch(console.log);\n};\n\nexport const deleteComment = (author, id) => {\n  return axios.delete(`${baseURL}/comments/${id}`);\n};\n\nexport const fetchTopics = () => {\n  return axios.get(`${baseURL}/topics`).then(({ data }) => {\n    return data.topics;\n  });\n};\n"]},"metadata":{},"sourceType":"module"}