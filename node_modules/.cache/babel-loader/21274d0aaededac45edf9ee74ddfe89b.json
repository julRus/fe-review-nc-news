{"ast":null,"code":"var _jsxFileName = \"/home/julia/northcoders/FRONTEND/fe-review/fe-nc-news/nc-news/src/components/ArticleFeeder.jsx\";\nimport React from \"react\";\nimport * as api from \"../api\";\nimport ArticleCard from \"../components/subComponents/ArticleCard\";\nimport ArticleSorter from \"../components/subComponents/ArticleSorter\";\nexport default class ArticleFeeder extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      articles: [],\n      isLoading: true,\n      err: null\n    };\n\n    this.fetchArticles = (sort_term, topic) => {\n      api.getArticles(sort_term, topic).then(articles => {\n        this.setState({\n          articles: articles,\n          isLoading: false\n        });\n      }).catch(err => {\n        this.setState({\n          err: {\n            status: err.response.status,\n            msg: err.response.data.msg\n          },\n          isLoading: false\n        });\n      });\n    };\n  }\n\n  render() {\n    // const {\n    //   user: { username }\n    // } = this.props;\n    // console.log(username);\n    const articles = this.state.articles;\n    if (this.state.isLoading) return React.createElement(\"p\", {\n      className: \"loadIndicator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Loading...\");\n    if (this.state.err !== null) return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, \"this.state.err.status\"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, \"this.state.err.msg\"));\n    return React.createElement(\"section\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"article_sorter\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(ArticleSorter, {\n      fetchArticles: this.fetchArticles,\n      slug: props.slug,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"articles\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \" \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"articles_title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"ARTICLES\"), articles.map(article => {\n      return React.createElement(ArticleCard, {\n        key: article.article_id,\n        id: article.article_id,\n        date: article.created_at,\n        topic: article.topic,\n        title: article.title,\n        comments: article.comment_count,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    }))));\n  }\n\n  componentDidMount() {\n    this.fetchArticles(null, this.props.slug);\n  } // componentDidUpdate(prevState) {\n  //   if (prevState !== this.state) {\n  //     this.filterArticlesByTopic(this.props.slug);\n  //   }\n  // }\n  // filterArticlesByTopic(slug) {\n  //   if (slug) {\n  //     this.setState(currentState => {\n  //       const newState = {\n  //         ...currentState\n  //       };\n  //       console.log(newState);\n  //       const topics = newState.articles.filter(article => {\n  //         return article.topic === slug;\n  //       });\n  //       const newNewState = { ...currentState, articles: [...topics] };\n  //       return newNewState;\n  //     });\n  //   }\n  // }\n  // this.filterArticlesByTopic(this.props.slug)\n\n\n}","map":{"version":3,"sources":["/home/julia/northcoders/FRONTEND/fe-review/fe-nc-news/nc-news/src/components/ArticleFeeder.jsx"],"names":["React","api","ArticleCard","ArticleSorter","ArticleFeeder","Component","state","articles","isLoading","err","fetchArticles","sort_term","topic","getArticles","then","setState","catch","status","response","msg","data","render","props","slug","map","article","article_id","created_at","title","comment_count","componentDidMount"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as api from \"../api\";\n\nimport ArticleCard from \"../components/subComponents/ArticleCard\";\nimport ArticleSorter from \"../components/subComponents/ArticleSorter\";\n\nexport default class ArticleFeeder extends React.Component {\n  state = {\n    articles: [],\n    isLoading: true,\n    err: null\n  };\n  render() {\n    // const {\n    //   user: { username }\n    // } = this.props;\n    // console.log(username);\n    const { articles } = this.state;\n    if (this.state.isLoading)\n      return <p className=\"loadIndicator\">Loading...</p>;\n    if (this.state.err !== null)\n      return (\n        <>\n          <h1>this.state.err.status</h1>\n          <h2>this.state.err.msg</h2>\n        </>\n      );\n    return (\n      <section className=\"content\">\n        <div className=\"article_sorter\">\n          <ArticleSorter fetchArticles={this.fetchArticles} slug={props.slug} />\n        </div>\n        <div className=\"articles\">\n          <ul\n            className=\"\n          \"\n          >\n            <h3 className=\"articles_title\">ARTICLES</h3>\n            {articles.map(article => {\n              return (\n                <ArticleCard\n                  key={article.article_id}\n                  id={article.article_id}\n                  date={article.created_at}\n                  topic={article.topic}\n                  title={article.title}\n                  comments={article.comment_count}\n                />\n              );\n            })}\n          </ul>\n        </div>\n      </section>\n    );\n  }\n\n  componentDidMount() {\n    this.fetchArticles(null, this.props.slug);\n  }\n\n  // componentDidUpdate(prevState) {\n  //   if (prevState !== this.state) {\n  //     this.filterArticlesByTopic(this.props.slug);\n  //   }\n  // }\n\n  fetchArticles = (sort_term, topic) => {\n    api\n      .getArticles(sort_term, topic)\n      .then(articles => {\n        this.setState({ articles: articles, isLoading: false });\n      })\n      .catch(err => {\n        this.setState({\n          err: { status: err.response.status, msg: err.response.data.msg },\n          isLoading: false\n        });\n      });\n  };\n\n  // filterArticlesByTopic(slug) {\n  //   if (slug) {\n  //     this.setState(currentState => {\n  //       const newState = {\n  //         ...currentState\n  //       };\n  //       console.log(newState);\n\n  //       const topics = newState.articles.filter(article => {\n  //         return article.topic === slug;\n  //       });\n\n  //       const newNewState = { ...currentState, articles: [...topics] };\n\n  //       return newNewState;\n  //     });\n  //   }\n  // }\n\n  // this.filterArticlesByTopic(this.props.slug)\n}\n"]},"metadata":{},"sourceType":"module"}