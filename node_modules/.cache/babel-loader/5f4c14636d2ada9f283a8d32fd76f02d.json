{"ast":null,"code":"import _defineProperty from \"/home/julia/northcoders/FRONTEND/fe-review/fe-nc-news/nc-news/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/julia/northcoders/FRONTEND/fe-review/fe-nc-news/nc-news/src/components/subComponents/CommentMaker.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\"; // import Header from \"../Header\";\n\nimport * as api from \"../../api\";\nexport default class CommentMaker extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comment: {\n        username: this.props.user.username,\n        body: \"\"\n      },\n      hasCommented: true,\n      comments: []\n    };\n  }\n\n  render() {\n    return React.createElement(React.Fragment, null, React.createElement(\"main\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: event => this.createComment(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, \"Post an Comment \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \"Comment Content\", React.createElement(\"textarea\", {\n      rows: \"9\",\n      cols: \"50\",\n      required: true,\n      value: this.state.comment.body,\n      onChange: event => this.handleChange(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n  handleChange(event) {\n    const body = event.target.value;\n    const user = this.props.user;\n    this.setState({\n      comment: {\n        username: user.username,\n        body: body\n      }\n    });\n  }\n\n  createComment(event) {\n    event.preventDefault();\n    this.setState({\n      comment: {},\n      hasCommented: true\n    });\n    api.postComment(this.state.comment, this.props.article_id).then(comment => {\n      this.renderComment(comment.comment);\n    });\n  }\n\n  renderComment(comment) {\n    this.setState(currentState => {\n      const newState = currentState = _objectSpread({}, this.state, {\n        comments: [...this.props.comments]\n      });\n\n      return newState;\n    });\n    console.log(this.state);\n  }\n\n}","map":{"version":3,"sources":["/home/julia/northcoders/FRONTEND/fe-review/fe-nc-news/nc-news/src/components/subComponents/CommentMaker.jsx"],"names":["React","api","CommentMaker","Component","state","comment","username","props","user","body","hasCommented","comments","render","event","createComment","handleChange","target","value","setState","preventDefault","postComment","article_id","then","renderComment","currentState","newState","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,KAAKC,GAAZ,MAAqB,WAArB;AAEA,eAAe,MAAMC,YAAN,SAA2BF,KAAK,CAACG,SAAjC,CAA2C;AAAA;AAAA;AAAA,SACxDC,KADwD,GAChD;AACNC,MAAAA,OAAO,EAAE;AAAEC,QAAAA,QAAQ,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBF,QAA5B;AAAsCG,QAAAA,IAAI,EAAE;AAA5C,OADH;AAENC,MAAAA,YAAY,EAAE,IAFR;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KADgD;AAAA;;AAMxDC,EAAAA,MAAM,GAAG;AACP,WACE,0CAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAEC,KAAK,IAAI,KAAKC,aAAL,CAAmBD,KAAnB,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADlB,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAEE;AACE,MAAA,IAAI,EAAC,GADP;AAEE,MAAA,IAAI,EAAC,IAFP;AAGE,MAAA,QAAQ,MAHV;AAIE,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWC,OAAX,CAAmBI,IAJ5B;AAKE,MAAA,QAAQ,EAAEI,KAAK,IAAI,KAAKE,YAAL,CAAkBF,KAAlB,CALrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,EAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF,CADF,CAJF,CADF;AAuBD;;AAEDE,EAAAA,YAAY,CAACF,KAAD,EAAQ;AAClB,UAAMJ,IAAI,GAAGI,KAAK,CAACG,MAAN,CAAaC,KAA1B;AACA,UAAMT,IAAI,GAAG,KAAKD,KAAL,CAAWC,IAAxB;AACA,SAAKU,QAAL,CAAc;AAAEb,MAAAA,OAAO,EAAE;AAAEC,QAAAA,QAAQ,EAAEE,IAAI,CAACF,QAAjB;AAA2BG,QAAAA,IAAI,EAAEA;AAAjC;AAAX,KAAd;AACD;;AAEDK,EAAAA,aAAa,CAACD,KAAD,EAAQ;AACnBA,IAAAA,KAAK,CAACM,cAAN;AACA,SAAKD,QAAL,CAAc;AAAEb,MAAAA,OAAO,EAAE,EAAX;AAAeK,MAAAA,YAAY,EAAE;AAA7B,KAAd;AACAT,IAAAA,GAAG,CAACmB,WAAJ,CAAgB,KAAKhB,KAAL,CAAWC,OAA3B,EAAoC,KAAKE,KAAL,CAAWc,UAA/C,EAA2DC,IAA3D,CAAgEjB,OAAO,IAAI;AACzE,WAAKkB,aAAL,CAAmBlB,OAAO,CAACA,OAA3B;AACD,KAFD;AAGD;;AAEDkB,EAAAA,aAAa,CAAClB,OAAD,EAAU;AACrB,SAAKa,QAAL,CAAcM,YAAY,IAAI;AAC5B,YAAMC,QAAQ,GAAID,YAAY,qBACzB,KAAKpB,KADoB;AAE5BO,QAAAA,QAAQ,EAAE,CAAC,GAAG,KAAKJ,KAAL,CAAWI,QAAf;AAFkB,QAA9B;;AAIA,aAAOc,QAAP;AACD,KAND;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKvB,KAAjB;AACD;;AAvDuD","sourcesContent":["import React from \"react\";\n// import Header from \"../Header\";\nimport * as api from \"../../api\";\n\nexport default class CommentMaker extends React.Component {\n  state = {\n    comment: { username: this.props.user.username, body: \"\" },\n    hasCommented: true,\n    comments: []\n  };\n  render() {\n    return (\n      <>\n        {/* <header>\n          <Header user={this.props.user} />\n        </header> */}\n        <main>\n          <form onSubmit={event => this.createComment(event)}>\n            Post an Comment <br />\n            <label>\n              Comment Content\n              <textarea\n                rows=\"9\"\n                cols=\"50\"\n                required\n                value={this.state.comment.body}\n                onChange={event => this.handleChange(event)}\n              ></textarea>\n            </label>\n            <button>Submit</button>\n          </form>\n        </main>\n      </>\n    );\n  }\n\n  handleChange(event) {\n    const body = event.target.value;\n    const user = this.props.user;\n    this.setState({ comment: { username: user.username, body: body } });\n  }\n\n  createComment(event) {\n    event.preventDefault();\n    this.setState({ comment: {}, hasCommented: true });\n    api.postComment(this.state.comment, this.props.article_id).then(comment => {\n      this.renderComment(comment.comment);\n    });\n  }\n\n  renderComment(comment) {\n    this.setState(currentState => {\n      const newState = (currentState = {\n        ...this.state,\n        comments: [...this.props.comments]\n      });\n      return newState;\n    });\n    console.log(this.state);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}